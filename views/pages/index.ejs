<!DOCTYPE html>
<html>
<head>
	<style>
		.content
		{
			height:224px;
			overflow: auto;
		}
		.cell
		{
			outline: #000000 solid;
			display: block;
			padding-bottom: 15px;
		}
		.pokemon_image
		{
			padding-left:10px;
			padding-right: 10px;
			display: block;
			float: left;
		}
		.pokemon_text
		{
			padding-top: 10px;
			padding-right: 50px;
			display: block;
		}
		.link1
		{
			padding-top: 10px;
		}

		.link2
		{
			padding-right:10px;
		}

	</style>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" type="text/css" href="/stylesheets/bootstrap.min.css">
	<link rel="stylesheet" href="/stylesheets/bootstrap-theme.min.css">
	<script src="/js/jquery.js"></script>
	<script src="/js/bootstrap.min.js"></script>
	<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?sensor=false"></script>
	<script>
		var walkTimer;
		var isWalking=false;
	function CloseDirectionDialog()
	{
				document.getElementById('directionsDialog').style.visibility = 'hidden';
				$("#pokemonlist").show();

	}
			function GetDirections(playersLong,playersLat,pokemonsLong,pokemonsLat)
			{
				var directionDisplay;
				var directionsService = new google.maps.DirectionsService();
				var map;

				document.getElementById('directionsDialog').style.visibility = '';
				$("#pokemonlist").hide();

				var myOptions = {
					mapTypeId: google.maps.MapTypeId.ROADMAP,
				}

				var start ='' +  playersLong + ',' + playersLat + '' ;
				var end = '' + pokemonsLong + ',' + pokemonsLat + '';
				
				var request = {
					origin: start,
					destination: end,
					travelMode: google.maps.DirectionsTravelMode.WALKING
				};

				directionsService.route(request, function(response,status)
				{
					if (status == google.maps.DirectionsStatus.OK)
					{
						var myRoute = response.routes[0];
						var txtDir = '';
						for (var i=0; i < myRoute.legs[0].steps.length;i++)
						{
							txtDir += myRoute.legs[0].steps[i].instructions+"<br />";
						}
						document.getElementById('directions').innerHTML = txtDir;
					}
				});
			}

			function msToTime(duration) {
				var milliseconds = parseInt(Math.floor((duration%1000)/100))
					, seconds = parseInt(Math.floor((duration/1000)%60))
					, minutes = parseInt(Math.floor((duration/(1000*60))%60))
					, hours = parseInt((Math.floor(duration/(1000*60*60))%24));

				hours = (hours < 10) ? "0" + hours : hours;
				minutes = (minutes < 10) ? "0" + minutes : minutes;
				seconds = (seconds < 10) ? "0" + seconds : seconds;

				return  minutes + ":" + seconds;
			}

		function StartWalking()
		{
			if (isWalking == true)
			{
				$("#simular").html("Simulate Walk");
				isWalking = false;
				window.clearInterval(walkTimer);
				$("#pokemonlist").empty();
				$("#status").html("");
			} else {

				navigator.geolocation.getCurrentPosition(foundLocation, noLocation);
				
				function foundLocation(position)
				{
					var lat = position.coords.latitude;
					var lon = position.coords.longitude;

					RequestHeartBeat(lat,lon);
				}

				function noLocation()
				{
					//default coords
					var lat = 37.9010153;
					var lng = -122.300079;
					alert('Can not get your location. Please enable your GPS and allow this app to use it. This will use a different location.');
					RequestHeartBeat(lat,lng);
				}
			}

		}
		function AddToCell(PokemonData, playerLat,playerLong)
		{

			var cell = document.createElement("div");
			cell.id = 'pcells';
			cell.sid = PokemonData.sid;
			$(cell).addClass("cell");
			$(cell).appendTo('#pokemonlist');

			var image_cell = document.createElement("span");
			$(image_cell).addClass("pokemon_image");
			$(image_cell).html('<img src="' + PokemonData.picture + '">');
			$(image_cell).appendTo($(cell));

			var pokemon_info = document.createElement("span");
			$(pokemon_info).addClass('pokemon_text');
			$(pokemon_info).appendTo($(cell));

			var pokemon_name = document.createElement("div");
			$(pokemon_name).html("" + PokemonData.name);
			$(pokemon_name).appendTo($(pokemon_info));

			var dis = getDistanceFromLatLonInKm(PokemonData.latitude,PokemonData.longitude,playerLat,playerLong)

			var pokemon_dist= document.createElement("div");
			$(pokemon_dist).html(dis.toFixed(2) + " km away");
			$(pokemon_dist).appendTo($(pokemon_info));

			var pokemon_time= document.createElement("div");
			$(pokemon_time).html("Time left: " + msToTime(PokemonData.remaining) );
			$(pokemon_time).appendTo($(pokemon_info));
	/*		
			var pokemon_cp= document.createElement("div");
			$(pokemon_cp).html("combat points: "+ PokemonData.cp);
			$(pokemon_cp).appendTo($(pokemon_info));
		*/	
			var pokemon_links= document.createElement("div");
			$(pokemon_links).addClass('link1');
			$(pokemon_links).appendTo($(pokemon_info));

			var directions = document.createElement("span");
			$(directions).addClass('link2');

			$(directions).html('<a href="javascript:GetDirections(' + playerLat + ',' + playerLong + ',' + PokemonData.latitude + ',' + PokemonData.longitude + ')">direction</a>');
			$(directions).appendTo($(pokemon_links));
		/*
			var showonmap = document.createElement("span");
			$(showonmap).html('<a href="#">show on map</a>');
			$(showonmap).appendTo($(pokemon_links));
*/
			var b = document.createElement("br");
			$(b).appendTo('#pokemonlist');
		}

		function RequestHeartBeat(userLat,userLng)
		{
			var lat = userLat;
			var lng = userLng;
			/*
			var fpokemon={};
			fpokemon.sid = '12f2';
			fpokemon.id = 1;
			fpokemon.name = 'fakemon';
			fpokemon.picture = "";
			fpokemon.remaining = 0;
			
			AddToCell(fpokemon);
			AddToCell(fpokemon);
			*/

/*
			if (isWalking == true)
			{

				$("#simular").html("Simulate Walk");
				isWalking = false;
				window.clearInterval(walkTimer);
				$("#pokemonlist").empty();
				$("#status").html("");
			} else {
*/
				$("#simular").html("Stop walking");
				$("#status").html("<font color=\"white\">Walking..no pokemon found.</font>");
				isWalking=true;
				walkTimer = setInterval(function()
				{
						lat+= 0.0004;
						$.post("heartbeat", { lat, lng },
								function(data)
								{
									var data_obj = jQuery.parseJSON(''+data);

									for (var i=0;i < data_obj.near.length;i++)
									{

										var cells = document.getElementsByClassName('cell');
										var found = false;

										for (var j=0;j<cells.length;j++)
										{
											if (cells[j].sid == data_obj.near[i].sid)
											{
												found = true;
												break;
											}
										}

										if (found == false)
										{
											AddToCell(data_obj.near[i],lat,lng );
											total_pokemon = document.getElementsByClassName("cell");

											$("#status").html("<font color=\"white\">Walking.." + total_pokemon.length + "  pokemon found.</font>");
										}
									}
								}
						);
					}, 10000);
			//}

		}
function getDistanceFromLatLonInKm(lat1,lon1,lat2,lon2) {
	var R = 6371; // Radius of the earth in km
	var dLat = deg2rad(lat2-lat1);  // deg2rad below
	var dLon = deg2rad(lon2-lon1); 
	var a = 
		Math.sin(dLat/2) * Math.sin(dLat/2) +
		Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * 
		Math.sin(dLon/2) * Math.sin(dLon/2)
		; 
	var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); 
	var d = R * c; // Distance in km
	return d;
}

function deg2rad(deg) {
	return deg * (Math.PI/180)
}

function toRad(Value)
		{
			return Value * Math.PI / 180;
		}
	</script>
</head>

<body onload="">
    <nav class="navbar navbar-inverse navbar-fixed-top">
			<div class="container">
				<div class="navbar-header">
					<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
						<span class="sr-only">Toggle navigation</span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
					</button>
					<a class="navbar-brand" href="#">Pokemon on the  Go</a>
				</div>
				<div id="navbar" class="collapse navbar-collapse">
					<ul class="nav navbar-nav">
						<li class="active"><a href="#">Home</a></li>
					</ul>
			</div><!--/.nav-collapse -->
		</div>

		<div class="container">
				<div class="">
					<ul class="nav navbar-nav">
						<li><a href="javascript:StartWalking();"><img src="psyduck.gif" width=30 height=30 style="padding-right:5px"><span id="simular">Simulate Walk</span></a></li>
					</ul>
				</div>
		</div>

		</nav>
		<div style="padding-bottom: 90px;;"  >
		intvis
		</div>
			<div style="padding-bottom:20px;">
			</div>
			<div id="pokemonlist" style="">
			</div>
			<div style="height:50px;"  >
			
			</div>
		</div>

    <nav class="navbar navbar-inverse navbar-fixed-bottom">
			<div class="container">
				<div id="status" style="padding-top:10px;padding-bottom:10px">
				</div>
			</div>
		</nav>
    <nav class="navbar navbar-inverse navbar-fixed-centered" style="visibility:hidden" id="directionsDialog">
			<div >
				<div id="" class="content">
						<center>
					  <font color="white">
							<div id="directions" style="width:500px;height:150px;"></div>	
							<div>
								<input type="button" value="close" class="btn btn-primary" OnClick="CloseDirectionDialog()">
							</div>
						</font>
						</center>
				</div>
			</div>
		</nav>


</body>

</html>
